version: '3'

dotenv: ['.env']

env:
  TITLE:             "CQRS Multi-region Pattern in Azure"
  DEFAULT_REGION:    "westus3"
  DOMAIN_ROOT:       "bjdazure.tech"

tasks:
  default: 
    cmds: 
    - task --list 
  
  up: 
    desc: Builds Complete Environment
    cmds:
    - task: init
    - task: apply 

  init:
    desc: Creates Azure infrastructure and deploys application code
    cmds:
    - terraform -chdir=./infrastructure workspace new {{.REGION}} || true
    - terraform -chdir=./infrastructure workspace select {{.REGION}}
    - terraform -chdir=./infrastructure init
    vars: 
      REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'

  apply:
    cmds:
    - terraform -chdir=./infrastructure apply -auto-approve
        -var "region={{.REGION}}" 
        -var "tags={{.TITLE}}"    
        -var="locations=${Regions}" 
        -var custom_domain=${DomainName} 
        -var="certificate_file_path=${IngressPfxFilePath}"
        -var="certificate_password=${PFXPassword}"
        -compact-warnings
    vars: 
      REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'

  refresh:
    cmds:
    - terraform -chdir=./infrastructure refresh 
        -var "region={{.REGION}}" 
        -var "tags={{.TITLE}}"     
    vars: 
      REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'

      
  build: 
    desc: Builds and pushes the containers
    dir: ./scripts
    cmds:
    - cmd: echo
      silent: true
    #. ./modules/functions.ps1
    #. ./modules/naming.ps1 -AppName $AppName
    # $commit_version = Get-GitCommitVersion
    # Build-Application -AppName $AppName -AcrName $APP_ACR_NAME -SubscriptionName $SubscriptionName -Source $APP_SOURCE_DIR -Version $commit_version
    vars:
      APP_NAME: 
        sh: terraform -chdir=../infrastructure output -raw APP_NAME

  deploy:
    desc: Deploys application via Helm
    dir: ./scripts
    cmds:
    - cmd: echo
      silent: true
    #-var="locations=${Regions}" -var="app_name=${AppName}" -var="custom_domain=${DomainName}" -var="commit_version=${commit_version}"      
    vars:
      APP_NAME: 
        sh: terraform -chdir=../infrastructure output -raw APP_NAME
      SUBSCRIPTION_NAME:
        sh: az account show --query name -o tsv                  

  dns:
    desc: Gets the IP Address of the App Gateway
    dir: ./scripts
    cmds:
    - cmd: echo
      silent: true
    vars:
      APP_NAME: 
        sh: terraform -chdir=../infrastructure output -raw APP_NAME

  down:
    desc: Destroys all Azure resources and cleans up Terraform
    cmds:
    - az group list --tag Application="{{.TITLE}}" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --no-wait -n || true
    - cd infrastructure ;
      rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info || true
