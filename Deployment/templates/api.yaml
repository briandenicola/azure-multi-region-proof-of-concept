apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: default
  labels:
    app: cqrsapi
    component: api
spec:
  selector:
    matchLabels:
      app: cqrsapi
      component: api
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: cqrsapi
        component: api
        lang: golang
    spec:
      initContainers:
      - name: init-region
        image: bjd145/utils:latest
        command: ['sh', '-c', 'REGION=`curl -H Metadata:true "http://169.254.169.254/metadata/instance/compute/location?api-version=2017-08-01&format=text"`; echo export REGION=${REGION} >> /env/metadata']
        volumeMounts:
        - name: config-data
          mountPath: /env
      containers:
      - name: aeskeyapi
        image: {{.Values.acr_name}}.azurecr.io/cqrs/api:{{.Values.api_version}} 
        command: ['/bin/busybox', 'sh', '-c', 'source /env/metadata; ./main']
        volumeMounts:
        - name: config-data
          mountPath: /env
          readOnly: true
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
        envFrom:
        - secretRef:
            name: cqrssecrets
        resources:
          limits:
            cpu: "1"
            memory: 256Mi
          requests:
            cpu: "0.5"
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 1000
          runAsGroup: 1000
      volumes:
      - name: config-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: cqrsapisvc
  labels:
    version: "1.5"
spec:
  selector:
    app: cqrsapi
    component: api
  ports:
  - port: 8081
    targetPort: 8081
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cqrsapi
spec:
  rules:
  - http: 
      paths: 
      - backend:
          service:
            name: cqrsapisvc
            port: 
                number: 8081
        path: /
        pathType: Prefix 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cqrsapitls
  annotations:
        kubernetes.io/ingress.class: traefik
        traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - host: {{ .Values.uri }}   
    http:
      paths:
      - backend:
          service:
            name: cqrsapisvc
            port: 
                number: 8081
        path: /
        pathType: Prefix 
  tls:
  - secretName: traefik-api-cert
